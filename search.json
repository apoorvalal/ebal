[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jens Hainmueller. Author, maintainer. Apoorva Lal. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hainmueller J, Lal (2023). ebal: Entropy Reweighting Create Balanced Samples. R package version 0.2.","code":"@Manual{,   title = {ebal: Entropy Reweighting to Create Balanced Samples},   author = {Jens Hainmueller and Apoorva Lal},   year = {2023},   note = {R package version 0.2}, }"},{"path":"/index.html","id":"ebal--entropy-balancing","dir":"","previous_headings":"","what":"Entropy Reweighting to Create Balanced Samples","title":"Entropy Reweighting to Create Balanced Samples","text":"Updated version ebal R package entropy balancing method compute method--moments based inverse propensity scores causal inference related problems. Primary function ebalance(W, X) estimate ATT (W treatment vector). New features: main user-facing function ebalance optionally computes weights using automatic differentiation (via torch) called method=\"AutoDiff\". greatly improves stability (cost marginally slower runtime) small problems greatly improves speed stability large problems. detailed performance comparisons, see .","code":""},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Entropy Reweighting to Create Balanced Samples","text":"ebalance takes treatment vector covariates returns weight vector control units. can fed weighted.mean. regression.","code":"library(ebal) # lalonde observational data load(url(\"https://github.com/apoorvalal/LalRUtils/raw/master/data/lalonde.psid.RData\")) yn = \"re78\"; wn = \"treat\"; xn = setdiff(colnames(lalonde.psid), c(yn, wn))  ################################################################################ # naive estimate - this is badly biased relative to experimental benchmark of 1794 with(lalonde.psid, mean(re78[treat == 1]) - mean(re78[treat == 0])) # -15204.7755 # solving for weights bal_wts = ebalance(lalonde.psid[['treat']], lalonde.psid[,xn], method = \"AutoDiff\")$w ################################################################################ # balancing estimate - better with(lalonde.psid, mean(re78[treat == 1]) - weighted.mean(re78[treat == 0], bal_wts)) # 2422.7965 ################################################################################ # augmented balancing estimate  # create weights vector in dataset for regression - uniform weights for treated units lalonde.psid[['wt']] = 1/sum(lalonde.psid$treat)            # treat weights = 1/Nt lalonde.psid[['wt']][lalonde.psid$treat == 0] = bal_wts     # ctrl weights = ebal weights  estimatr::lm_robust(re78 ~ . - wt, weights = wt, lalonde.psid) %>%   summary %>% coefficients %>% .['treat',] %>% round(2)  # Estimate Std. Error    t value   Pr(>|t|)   CI Lower   CI Upper         DF #  2422.79     750.36       3.23       0.00     953.00    3895.71    2663.00"},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"installation","title":"Entropy Reweighting to Create Balanced Samples","text":"","code":"remotes::install_github(\"apoorvalal/ebal\")"},{"path":"/index.html","id":"lower-level-functions-for-usage-with-aggregate-data-and-other-reweighting-problems","dir":"","previous_headings":"","what":"lower-level functions for usage with aggregate data, and other reweighting problems","title":"Entropy Reweighting to Create Balanced Samples","text":"Reweighting may useful wide variety settings (e.g. survey reweighting, experiment generalization, density ratio estimation). many cases, may summary statistics individual level covariates target sample. cases, may use eb ebal_torch functions directly, supply donor matrix X0, target moment vector X1, optionally supply base weights. example, control group averages problem, solve weights like :","code":"# target summary - this could come from a census X1 = colMeans(lalonde.psid[lalonde.psid$treat == 1, xn]) # source matrix X0 = lalonde.psid[lalonde.psid$treat == 0, xn] %>% as.matrix() # weights that set weighted mean of X0 to X1 w = ebal_torch(X0, X1)$Weights.ebal  # same as above with(lalonde.psid, mean(re78[treat == 1]) - weighted.mean(re78[treat == 0], w)) # 2422.7965"},{"path":"/reference/baltest.collect.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Covariate Balance Statistics — baltest.collect","title":"Collect Covariate Balance Statistics — baltest.collect","text":"function summarizes covariate balance statistics computed MatchBalance(Matching) balance table.","code":""},{"path":"/reference/baltest.collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Covariate Balance Statistics — baltest.collect","text":"","code":"baltest.collect(matchbal.out, var.names, after = TRUE)"},{"path":"/reference/baltest.collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect Covariate Balance Statistics — baltest.collect","text":"var.names vector covariate names logical flag whether results Matching summarized. TRUE baltest.collect summarizes results covariate balance checks MatchBalance computes matched data. FALSE results balance checks unmatched data used. matchbal object call MatchBalance(Matching)","code":""},{"path":"/reference/baltest.collect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Covariate Balance Statistics — baltest.collect","text":"vector treatment effects","code":""},{"path":"/reference/eb.html","id":null,"dir":"Reference","previous_headings":"","what":"internal function to compute entropy balancing weights — eb","title":"internal function to compute entropy balancing weights — eb","text":"internal function compute entropy balancing weights","code":""},{"path":"/reference/eb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal function to compute entropy balancing weights — eb","text":"","code":"eb(   tr.total = tr.total,   co.x = co.x,   coefs = coefs,   base.weight = base.weight,   max.iterations = max.iterations,   constraint.tolerance = constraint.tolerance,   print.level = print.level )"},{"path":"/reference/eb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal function to compute entropy balancing weights — eb","text":"tr.total treatment moments co.x covariate matrix coefs starting coefs base.weight base weight max.iterations max number iterations constraint.tolerance tolerance constraint print.level print level debugging","code":""},{"path":"/reference/eb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"internal function to compute entropy balancing weights — eb","text":"list results","code":""},{"path":"/reference/ebal_torch.html","id":null,"dir":"Reference","previous_headings":"","what":"ebal implementation with autodiff via torch — ebal_torch","title":"ebal implementation with autodiff via torch — ebal_torch","text":"ebal implementation autodiff via torch","code":""},{"path":"/reference/ebal_torch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ebal implementation with autodiff via torch — ebal_torch","text":"","code":"ebal_torch(X0, X1, base_weight = NULL, maxit = 200)"},{"path":"/reference/ebal_torch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ebal implementation with autodiff via torch — ebal_torch","text":"X0 donor units matrix X1 target moments base_weight base weight vector","code":""},{"path":"/reference/ebal_torch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ebal implementation with autodiff via torch — ebal_torch","text":"list weights coefficients","code":""},{"path":"/reference/ebalance.html","id":null,"dir":"Reference","previous_headings":"","what":"Primary Function for Entropy Balancing — ebalance","title":"Primary Function for Entropy Balancing — ebalance","text":"function implements entropy balancing, data preprocessing procedure allows users reweight dataset. preprocessing based maximum entropy reweighting scheme assigns weights unit covariate distributions reweighted data satisfy set moment conditions specified researcher. can useful balance covariate distributions observational studies binary treatment control group data can reweighted match covariate moments treatment group. Entropy balancing can also used reweight survey sample known characteristics target population. weights result entropy balancing can passed regression models subsequently analyze reweighted data. default, ebalance reweights covariate distributions control group match target moments computed treatment group reweighted data can used analyze average treatment effect treated.","code":""},{"path":"/reference/ebalance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Primary Function for Entropy Balancing — ebalance","text":"","code":"ebalance(   Treatment,   X,   base.weight = NULL,   norm.constant = NULL,   coefs = NULL,   max.iterations = 200,   constraint.tolerance = 1,   print.level = 0,   method = c(\"GaussNewton\", \"AutoDiff\") )"},{"path":"/reference/ebalance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Primary Function for Entropy Balancing — ebalance","text":"Treatment vector indicating observations data group reweighted (.e. control group) data group used compute target moments (.e. treatment group). can either logical vector real vector 0 denotes control observations 1 denotes treatment observations. default target moments computed using data treatment observations. X matrix containing variables researchers wants include reweighting. adjust means covariates, raw covariates can included. adjust variances covariates, squared terms raw covariates can included. adjust co-moments, interaction terms can included. columns matrix must positive variance matrix must invertible. missing data allowed. base.weight optional vector base weights maximum entropy reweighting (one weight control unit). default uniform base weights. norm.constant optional normalizing constant. default weights normalized sum weights reweighted control group match number observations treatment group. coefs optional vector model coefficients start reweighting. max.iterations Maximum number iterations run attempting reweight data. constraint.tolerance tolerance level used ebalance decide moments reweighted data equal target moments. print.level Controls level printing: 0 (normal printing), 2 (detailed), 3 (detailed).","code":""},{"path":"/reference/ebalance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Primary Function for Entropy Balancing — ebalance","text":"list object class ebalance following elements: target.margins vector contains target moments coded covariate distributions treatment group. co.xdata matrix contains covariate data control group. w vector contains control group weights assigned entropy balancing. coefs vector contains coefficients reweighting algorithm. maxdiff scalar contains maximum deviation moments reweighted data target moments. constraint.tolerance tolerance level used balance constraints. base.weight base weight used. print.level print level used. converged Logical flag algorithm converged within tolerance.","code":""},{"path":"/reference/ebalance.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Primary Function for Entropy Balancing — ebalance","text":"Hainmueller, J. (2012) 'Entropy Balancing Causal Effects: Multivariate Reweighting Method Produce Balanced Samples Observational Studies', Political Analysis (Winter 2012) 20 (1): 25–46. Zaslavsky, . (1988), 'Representing local reweighting area adjustments households', Survey Methodology 14(2), 265–288. Ireland, C. Kullback, S. (1968), 'Contingency tables given marginals', Biometrika 55, 179–188. Kullback, S. (1959), Information Theory Statistics, Wiley, NY.","code":""},{"path":"/reference/ebalance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Primary Function for Entropy Balancing — ebalance","text":"","code":"treatment  =  c(rep(0,50),rep(1,30)) X          =  rbind(replicate(3,rnorm(50,0)),replicate(3,rnorm(30,.5))) colnames(X) = paste(\"x\",1:3,sep=\"\") # entropy balancing eb.out  = ebalance(Treatment=treatment, X=X) # means in treatment group data apply(X[treatment==1,],2,mean) #>     x1     x2     x3  #> 0.2545 0.3545 0.5502  # means in reweighted control group data apply(X[treatment==0,],2,weighted.mean,w=eb.out$w) #>     x1     x2     x3  #> 0.2533 0.3572 0.5554  # means in raw data control group data apply(X[treatment==0,],2,mean) #>       x1       x2       x3  #>  0.39115 -0.19742  0.07657"},{"path":"/reference/ebalance.trim.html","id":null,"dir":"Reference","previous_headings":"","what":"Trimming Weights for Entropy Balancing — ebalance.trim","title":"Trimming Weights for Entropy Balancing — ebalance.trim","text":"Function trim weights obtained entropy balancing. takes output call ebalance trims data weights (subject moment conditions) ratio maximum/minimum weight mean weight reduced satisfy user specified target. user target specified maximum weight ratio automatically trimmed far feasible given data.","code":""},{"path":"/reference/ebalance.trim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trimming Weights for Entropy Balancing — ebalance.trim","text":"","code":"ebalance.trim(   ebalanceobj,   max.weight = NULL,   min.weight = 0,   max.trim.iterations = 200,   max.weight.increment = 0.92,   min.weight.increment = 1.08,   print.level = 0 )"},{"path":"/reference/ebalance.trim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trimming Weights for Entropy Balancing — ebalance.trim","text":"ebalanceobj object call ebalance. min.weight Optional target ratio minimum mean weight. max.trim.iterations Maximum number trimming iterations. max.weight.increment Increment iterative trimming ratio maximum mean weight (scalar 0-1, .92 indicates attempted reduction max ratio 8 percent). min.weight.increment Increment iterative trimming ratio minimum mean weight (scalar > 1, 1.08 indicates attempted reduction max ratio 8 percent). print.level Controls level printing: 0 (normal printing), 2 (detailed), 3 (detailed). max.weightOptional target ratio maximum mean weight.","code":""},{"path":"/reference/ebalance.trim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trimming Weights for Entropy Balancing — ebalance.trim","text":"list object class ebalance.trim following elements: target.margins vector contains target moments coded covariate distributions treatment group. co.xdata matrix contains covariate data control group. w vector contains control group weights assigned trimming entropy balancing algorithm. coefs vector contains coefficients reweighting algorithm. maxdiff scalar contains maximum deviation moments reweighted data target moments. norm.constant Normalizing constant used. constraint.tolerance tolerance level used balance constraints. max.iterations Maximum number trimming iterations used. base.weight base weight used. converged Logical flag algorithm converged within tolerance.","code":""},{"path":"/reference/ebalance.trim.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Trimming Weights for Entropy Balancing — ebalance.trim","text":"Hainmueller, J. (2012) 'Entropy Balancing Causal Effects: Multivariate Reweighting Method Produce Balanced Samples Observational Studies', Political Analysis (Winter 2012) 20 (1): 25–46. Zaslavsky, . (1988), 'Representing local reweighting area adjustments households', Survey Methodology 14(2), 265–288. Ireland, C. Kullback, S. (1968), 'Contingency tables given marginals', Biometrika 55, 179–188. Kullback, S. (1959), Information Theory Statistics, Wiley, NY.","code":""},{"path":"/reference/ebalance.trim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trimming Weights for Entropy Balancing — ebalance.trim","text":"","code":"# create toy data: treatment indicator and three covariates X1-3 treatment   = c(rep(0,50),rep(1,30)) X           = rbind(replicate(3,rnorm(50,0)),replicate(3,rnorm(30,.5))) colnames(X) = paste(\"x\",1:3,sep=\"\") # entropy balancing eb.out = ebalance(Treatment=treatment, X=X) # means in treatment group data apply(X[treatment==1,],2,mean) #>     x1     x2     x3  #> 0.7945 0.7303 0.5580  # means in reweighted control group data apply(X[treatment==0,],2,weighted.mean,w=eb.out$w) #>     x1     x2     x3  #> 0.7788 0.7152 0.5526  # means in raw data control group data apply(X[treatment==0,],2,mean) #>       x1       x2       x3  #>  0.15098 -0.02915 -0.12521  eb.out.tr = ebalance.trim(eb.out) #> Automated trimmig of max weight ratio  #> Trim iteration 1 Max Weight Ratio: 12.36  #> Trim iteration 2 Max Weight Ratio: 12.36  #> Trim iteration 3 Max Weight Ratio: 11.28  #> Trim iteration 4 Max Weight Ratio: 9.415  #> Trim iteration 5 Max Weight Ratio: 9.415  #> Trim iteration 6 Max Weight Ratio: 7.573  #> Trim iteration 7 Max Weight Ratio: 7.573  #> Trim iteration 8 Max Weight Ratio: 7.573  #> Trim iteration 9 Max Weight Ratio: 6.75  #> Converged within tolerance  eb.out.tr %>% str #> List of 10 #>  $ target.margins      : NULL #>  $ co.xdata            : num [1:50, 1:4] 1 1 1 1 1 1 1 1 1 1 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : NULL #>   .. ..$ : chr [1:4] \"\" \"x1\" \"x2\" \"x3\" #>  $ w                   : num [1:50] 0.77023 0.01913 0.19367 0.00864 0.14447 ... #>  $ coefs               : Named num [1:4] -0.861 0.675 0.477 1.083 #>   ..- attr(*, \"names\")= chr [1:4] \"\" \"\" \"\" \"\" #>  $ maxdiff             : num 0.494 #>  $ norm.constant       : int 30 #>  $ constraint.tolerance: num 1 #>  $ max.iterations      : num 200 #>  $ base.weight         : num [1:50] 1 1 1 1 1 1 1 1 1 1 ... #>  $ converged           : logi TRUE #>  - attr(*, \"class\")= chr \"ebalance.trim\" # means in reweighted control group data apply(X[treatment==0,],2,weighted.mean,w=eb.out.tr$w) #>     x1     x2     x3  #> 0.7942 0.7272 0.5738  # untrimmed and trimmed weights round(summary(eb.out$w),2) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    0.02    0.11    0.26    0.61    0.56    7.76  round(summary(eb.out.tr$w),2) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>    0.00    0.02    0.14    0.59    0.45    3.98"},{"path":"/reference/getsquares.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Matrix of Squared Terms — getsquares","title":"Generate Matrix of Squared Terms — getsquares","text":"Takes matrix covariates generates new matrix contains original covariates squared terms. Squared terms binary covariates omitted.","code":""},{"path":"/reference/getsquares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Matrix of Squared Terms — getsquares","text":"","code":"getsquares(mat)"},{"path":"/reference/getsquares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Matrix of Squared Terms — getsquares","text":"mat n k numeric matrix covariates.","code":""},{"path":"/reference/getsquares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Matrix of Squared Terms — getsquares","text":"matrix additional columns","code":""},{"path":"/reference/matrixmaker.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Matrix of One-way Interactions and Squared Terms — matrixmaker","title":"Generate Matrix of One-way Interactions and Squared Terms — matrixmaker","text":"Takes matrix covariates generates new matrix contains original covariates, one-way interaction terms, squared terms.","code":""},{"path":"/reference/matrixmaker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Matrix of One-way Interactions and Squared Terms — matrixmaker","text":"","code":"matrixmaker(mat)"},{"path":"/reference/matrixmaker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Matrix of One-way Interactions and Squared Terms — matrixmaker","text":"mat n k numeric matrix covariates.","code":""},{"path":"/reference/matrixmaker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Matrix of One-way Interactions and Squared Terms — matrixmaker","text":"matrix additional columns","code":""}]
